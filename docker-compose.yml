version: '3.8'

services:
  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    container_name: quiz-postgres
    restart: unless-stopped
    environment:
      POSTGRES_DB: quiz_registration
      POSTGRES_USER: quiz_user
      POSTGRES_PASSWORD: quiz_password
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./database/init.sql:/docker-entrypoint-initdb.d/init.sql
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U quiz_user -d quiz_registration"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Backend API
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: quiz-backend
    restart: unless-stopped
    environment:
      DATABASE_URL: postgresql://quiz_user:quiz_password@postgres:5432/quiz_registration?schema=public
      PORT: 3001
      NODE_ENV: development
      FRONTEND_URL: http://localhost:3000
      JWT_SECRET: your-super-secret-jwt-key-change-in-production
    ports:
      - "3001:3001"
    depends_on:
      postgres:
        condition: service_healthy
    volumes:
      - ./backend:/app
      - /app/node_modules
    command: npm run dev

  # Frontend React App  
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: quiz-frontend
    restart: unless-stopped
    ports:
      - "3000:3000"
    depends_on:
      - backend
    volumes:
      - ./frontend:/app
      - /app/node_modules
    command: npm run dev

volumes:
  postgres_data: